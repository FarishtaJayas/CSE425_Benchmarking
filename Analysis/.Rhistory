coord_fixed()+theme_minimal()+
ggtitle("Correlation plot for Readability comparison")+
xlab("Languages")+
ylab("Languages")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation Matrix for Readability") +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_minimal()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation Matrix for Readability") +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_stata() + scale_fill_stata()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation Matrix for Readability") +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_stata()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation Matrix for Readability") +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation Matrix for Readability") +scale_fill_viridis(option="plasma")+
coord_flip()+theme_few()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Correlation Matrix for Readability") +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(0,1), space = "Lab",
name="Correlation Matrix for Readability") +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison")
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_minimal()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="magma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "black")+
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="magma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("Readability corrplot",device='tiff', dpi="print")
new_programmer_data <- mydata[ which(my_data$Familiarity<3), ]
new_programmer_data <- my_data[ which(my_data$Familiarity<3), ]
View(new_programmer_data)
new_programmer_readability<-new_programmer_data[-c(1,2,3,5,7,9,11,13,15)]
data2<-melt(new_programmer_readability)
ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison")+
xlab("Languages")+
ylab("Score")
colnames(my_data_readability)<-c("C","C++","Java","Javascript","Python","R")
data2<-melt(new_programmer_readability)
ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison")+
xlab("Languages")+
ylab("Score")
new_programmer_data <- my_data[ which(my_data$Familiarity<3), ]
new_programmer_readability<-new_programmer_data[-c(1,2,3,5,7,9,11,13,15)]
colnames(my_data_readability)<-c("C","C++","Java","Javascript","Python","R")
data2<-melt(new_programmer_readability)
ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison")+
xlab("Languages")+
ylab("Score")
colnames(new_programmer_readability)<-c("C","C++","Java","Javascript","Python","R")
data2<-melt(new_programmer_readability)
ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison")+
xlab("Languages")+
ylab("Score")
ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison (New programmers)")+
xlab("Languages")+
ylab("Score")
ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_viridis(option="magma")+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison (New programmers)")+
xlab("Languages")+
ylab("Score")
ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison (New programmers)")+
xlab("Languages")+
ylab("Score")
ggsave("Readability boxplot (new programmer)",device='tiff', dpi="print")
readability_corrplot_new_programmer <- cor(new_programmer_readability)
c2<-corrplot(readability_corrplot_new_programmer, method = "circle")
ggplot(data = melted_cormat2, aes(Var2, Var1, fill = value))+
geom_tile(color = "black")+ #outline
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="magma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison (New programmer)")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
readability_corrplot_new_programmer <- cor(new_programmer_readability)
c2<-corrplot(readability_corrplot_new_programmer, method = "circle")
upper_tri2 <- get_upper_tri(c2)
upper_tri2
melted_cormat2 <- melt(upper_tri2, na.rm = TRUE)
ggplot(data = melted_cormat2, aes(Var2, Var1, fill = value))+
geom_tile(color = "black")+ #outline
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="magma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison (New programmer)")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggplot(data_long, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison")+
xlab("Languages")+
ylab("Score")
ggsave("Readability boxplot.tiff",device='tiff', dpi="print")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "black")+ #outline
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="magma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("Readability corrplot.tiff",device='tiff', dpi="print")
ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison (New programmers)")+
xlab("Languages")+
ylab("Score")
ggsave("Readability boxplot (new programmer).tiff",device='tiff', dpi="print")
ggplot(data = melted_cormat2, aes(Var2, Var1, fill = value))+
geom_tile(color = "black")+ #outline
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="magma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison (New programmer)")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("Readability corrplot (new programmer).tiff",device='tiff', dpi="print")
ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison (Non programmers)")+
xlab("Languages")+
ylab("Score")
ggsave("Readability boxplot (non programmer).tiff",device='tiff', dpi="print")
ggplot(data = melted_cormat2, aes(Var2, Var1, fill = value))+
geom_tile(color = "black")+ #outline
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="magma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison (Non programmer)")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("Readability corrplot (non programmer).tiff",device='tiff', dpi="print")
old_programmer_data <- my_data[ which(my_data$Familiarity>=3), ]
old_programmer_readability<-old_programmer_data[-c(1,2,3,5,7,9,11,13,15)]
colnames(old_programmer_readability)<-c("C","C++","Java","Javascript","Python","R")
#----------------------------Experienced programmer-----------------------
data3<-melt(old_programmer_readability)
ggplot(data3, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison (Experienced programmers)")+
xlab("Languages")+
ylab("Score")
ggsave("Readability boxplot (old programmer).tiff",device='tiff', dpi="print")
readability_corrplot_old_programmer <- cor(old_programmer_readability)
c3<-corrplot(readability_corrplot_old_programmer, method = "circle")
upper_tri3 <- get_upper_tri(c3)
upper_tri3
melted_cormat3 <- melt(upper_tri3, na.rm = TRUE)
ggplot(data = melted_cormat3, aes(Var2, Var1, fill = value))+
geom_tile(color = "black")+ #outline
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="magma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Readability comparison (Experienced programmer)")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("Readability corrplot (old programmer).tiff",device='tiff', dpi="print")
my_data_writability<-my_data[-c(1,2,3,4,6,8,10,12,14)]
View(my_data_writability)
colnames(my_data_writability)<-c("C","C++","Java","Javascript","Python","R")
new_programmer_writability<-new_programmer_data[-c(1,2,3,4,6,8,10,12,14)]
colnames(new_programmer_writability)<-c("C","C++","Java","Javascript","Python","R")
old_programmer_writability<-old_programmer_data[-c(1,2,3,4,6,8,10,12,14)]
colnames(old_programmer_writability)<-c("C","C++","Java","Javascript","Python","R")
data4<-melt(new_programmer_writability)
ggplot(data4, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Writability comparison")+
xlab("Languages")+
ylab("Score")
ggsave("Writability boxplot.tiff",device='tiff', dpi="print")
writability_corrplot_new_programmer <- cor(new_programmer_writability)
c4<-corrplot(writability_corrplot_new_programmer, method = "circle")
upper_tri4 <- get_upper_tri(c4)
upper_tri4
melted_cormat4 <- melt(upper_tri4, na.rm = TRUE)
ggplot(data = melted_cormat4, aes(Var2, Var1, fill = value))+
geom_tile(color = "black")+ #outline
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="magma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Writability comparison ")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("Writability corrplot.tiff",device='tiff', dpi="print")
data4<-melt(my_data_writability)
ggplot(data4, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Writability comparison")+
xlab("Languages")+
ylab("Score")
ggsave("Writability boxplot.tiff",device='tiff', dpi="print")
writability_corrplot_my_data <- cor(my_data_writability)
c4<-corrplot(writability_corrplot_my_data, method = "circle")
upper_tri4 <- get_upper_tri(c4)
upper_tri4
melted_cormat4 <- melt(upper_tri4, na.rm = TRUE)
ggplot(data = melted_cormat4, aes(Var2, Var1, fill = value))+
geom_tile(color = "black")+ #outline
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="magma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Writability comparison ")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("Writability corrplot.tiff",device='tiff', dpi="print")
data5<-melt(new_programmer_writability)
ggplot(data5, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Writability comparison (Non programmer)")+
xlab("Languages")+
ylab("Score")
ggsave("Writability boxplot(non programmer).tiff",device='tiff', dpi="print")
writability_corrplot_new_programmer <- cor(new_programmer_writability)
c5<-corrplot(writability_corrplot_new_programmer, method = "circle")
upper_tri5 <- get_upper_tri(c5)
upper_tri5
melted_cormat5 <- melt(upper_tri5, na.rm = TRUE)
ggplot(data = melted_cormat5, aes(Var2, Var1, fill = value))+
geom_tile(color = "black")+ #outline
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="magma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Writability comparison (Non programmer) ")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("Writability corrplot (non programmer).tiff",device='tiff', dpi="print")
data6<-melt(old_programmer_writability)
ggplot(data6, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Writability comparison (Old programmer)")+
xlab("Languages")+
ylab("Score")
ggsave("Writability boxplot(old programmer).tiff",device='tiff', dpi="print")
data6<-melt(old_programmer_writability)
ggplot(data6, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Writability comparison (Experienced programmer)")+
xlab("Languages")+
ylab("Score")
ggsave("Writability boxplot(old programmer).tiff",device='tiff', dpi="print")
writability_corrplot_old_programmer <- cor(old_programmer_writability)
c6<-corrplot(writability_corrplot_old_programmer, method = "circle")
upper_tri6 <- get_upper_tri(c6)
upper_tri6
melted_cormat6 <- melt(upper_tri6, na.rm = TRUE)
ggplot(data = melted_cormat6, aes(Var2, Var1, fill = value))+
geom_tile(color = "black")+ #outline
scale_fill_gradient2(midpoint = 0.5, limit = c(0,1)) +scale_fill_viridis(option="magma")+
coord_fixed()+theme_few()+
ggtitle("Correlation plot for Writability comparison (Experienced programmer) ")+
xlab("")+
ylab("")+
theme(plot.title = element_text(hjust = 0.5))
ggsave("Writability corrplot (old programmer).tiff",device='tiff', dpi="print")
C_score<-sum(my_data$C_readability)
Cpp_score<-sum(my_data$C.._readability)
Java_score<-sum(my_data$Java_readability)
JS_score<-sum(my_data$Javascript_readability)
Python_score<-sum(my_data$Python_readability)
R_score<-sum(my_data$R_readability)
scores<-c(C_score,Cpp_score,Java_score,JS_score,Python_score,R_score)
labels <- c("C","C++","Java","Javascript","Python","R")
data_pie <- data.frame(
languages=labels,
value=scores
)
View(data_pie)
data_pie <- data_pie %>%
arrange(desc(languages)) %>%
mutate(prop = value / sum(data_pie$value) *100) %>%
mutate(ypos = cumsum(prop)- 0.5*prop )
# Basic piechart
ggplot(data_pie, aes(x="", y=prop, fill=group)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = group), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
ggplot(data_pie, aes(x="", y=prop, fill=group)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = languages), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
# Basic piechart
ggplot(data_pie, aes(x="", y=prop, fill=languages)) +
geom_bar(stat="identity", width=1, color="white") +
coord_polar("y", start=0) +
theme_void() +
theme(legend.position="none") +
geom_text(aes(y = ypos, label = languages), color = "white", size=6) +
scale_fill_brewer(palette="Set1")
pie(scores,labels)
readability_importance<-sum(my_data$Importance_Reliability)/58
writability_importance<-sum(my_data$Importance_Writability)/58
readability_importance_new_programmer<-sum(new_programmer_data$Importance_Reliability)/nrow(new_programmer_data)
nrow(new_programmer_data)
writability_importance_new_programmer<-sum(new_programmer_data$Importance_Writability)/nrow(new_programmer_data)
readability_importance_old_programmer<-sum(old_programmer_data$Importance_Reliability)/nrow(old_programmer_data)
writability_importance_old_programmer<-sum(old_programmer_data$Importance_Writability)/nrow(old_programmer_data)
C_score<-sum(new_programmer_readability$C_readability)
Cpp_score<-sum(new_programmer_readability$C.._readability)
Java_score<-sum(new_programmer_readability$Java_readability)
JS_score<-sum(new_programmer_readability$Javascript_readability)
Python_score<-sum(new_programmer_readability$Python_readability)
R_score<-sum(new_programmer_readability$R_readability)
scores<-c(C_score,Cpp_score,Java_score,JS_score,Python_score,R_score)
pie(scores, labels = piepercent, main = "City pie chart",col = rainbow(length(x)))
legend("topright", c("C","C++","Java","Javascript","Python","R"), cex = 0.8,
fill = rainbow(length(x)))
pie(scores, labels = piepercent, main = "City pie chart",col = rainbow(length(x)))
legend("topright", c("C","C++","Java","Javascript","Python","R"), cex = 0.8,
fill = rainbow(length(scores)))
piepercent<- round(100*scores/sum(scores), 1)
pie(scores, labels = piepercent, main = "City pie chart",col = rainbow(length(x)))
legend("topright", c("C","C++","Java","Javascript","Python","R"), cex = 0.8,
fill = rainbow(length(scores)))
pie(scores, labels = piepercent, main = "City pie chart",col = rainbow(length(scores)))
legend("topright", c("C","C++","Java","Javascript","Python","R"), cex = 0.8,
fill = rainbow(length(scores)))
scores<-c(C_score,Cpp_score,Java_score,JS_score,Python_score,R_score)
labels <- c("C","C++","Java","Javascript","Python","R")
piepercent<- round(100*scores/sum(scores), 1)
pie(scores, labels = piepercent, main = "City pie chart",col = rainbow(length(scores)))
legend("topright", c("C","C++","Java","Javascript","Python","R"), cex = 0.8,
fill = rainbow(length(scores)))
C_score<-sum(new_programmer_readability$C_readability)
Cpp_score<-sum(new_programmer_readability$C.._readability)
Java_score<-sum(new_programmer_readability$Java_readability)
JS_score<-sum(new_programmer_readability$Javascript_readability)
Python_score<-sum(new_programmer_readability$Python_readability)
R_score<-sum(new_programmer_readability$R_readability)
scores<-c(C_score,Cpp_score,Java_score,JS_score,Python_score,R_score)
labels <- c("C","C++","Java","Javascript","Python","R")
piepercent<- round(100*scores/sum(scores), 1)
pie(scores, labels = piepercent, main = "City pie chart",col = rainbow(length(scores)))
readability_importance
readability_importance_new_programmer
readability_importance_old_programmer
writability_importance
writability_importance_new_programmer
writability_importance_old_programmer
View(old_programmer_readability)
View(new_programmer_readability)
