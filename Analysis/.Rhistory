q()
library(igraph)
#Generate a Weighted and Undirected graph with Erdos Renyi Model
gsim<-erdos.renyi.game(50, 0.5, type="gnp", directed = FALSE, loops = FALSE)
PESI<-runif(length(E(gsim)), 0, 1)
E(gsim)$weight<-PESI
#Get Adjacency
A<-get.adjacency(gsim, sparse=FALSE, attr="weight")
#Compute Onnela et al. (2005) coefficient
OnnelaClust<-ClustF(A, "undirected")
#Generate a Weighted and Directed Graph with Erdos Renyi Model
gsim<-erdos.renyi.game(50, 0.5, type="gnp", directed = TRUE, loops = FALSE)
PESI<-runif(length(E(gsim)), 0, 1)
E(gsim)$weight<-PESI
#Get Adjacency
A<-get.adjacency(gsim, sparse=FALSE, attr="weight")
#Compute Fagiolo (2007) coefficient
FagioloClust<-ClustF(A, "directed")
library(DirectedClustering)
install.packages("DirectedClustering")
library(DirectedClustering)
library(igraph)
#Generate a Weighted and Undirected graph with Erdos Renyi Model
gsim<-erdos.renyi.game(50, 0.5, type="gnp", directed = FALSE, loops = FALSE)
PESI<-runif(length(E(gsim)), 0, 1)
E(gsim)$weight<-PESI
#Get Adjacency
A<-get.adjacency(gsim, sparse=FALSE, attr="weight")
#Compute Onnela et al. (2005) coefficient
OnnelaClust<-ClustF(A, "undirected")
#Generate a Weighted and Directed Graph with Erdos Renyi Model
gsim<-erdos.renyi.game(50, 0.5, type="gnp", directed = TRUE, loops = FALSE)
PESI<-runif(length(E(gsim)), 0, 1)
E(gsim)$weight<-PESI
#Get Adjacency
A<-get.adjacency(gsim, sparse=FALSE, attr="weight")
#Compute Fagiolo (2007) coefficient
FagioloClust<-ClustF(A, "directed")
View(FagioloClust)
View(gsim)
View(OnnelaClust)
load("C:/Users/ZahinAhmed/Desktop/StatisticalRankTest/Final Methodology/P2P/Aug4-Done/.RData")
res.var
View(res.var)
View(res.var)
detectCores(all.tests = FALSE, logical = TRUE)
library(parallel)
detectCores(all.tests = FALSE, logical = TRUE)
detectCores(all.tests = TRUE, logical = TRUE)
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "#999999", high = "#CC79A7", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()
load("C:/Users/ZahinAhmed/Desktop/StatisticalRankTest/Final Methodology/P2P/Aug8-Done/.RData")
library(svglite)
library(ggplot2)
library(reshape2)
melted_cormat <- melt(c)
head(melted_cormat)
ggplot(melted_cormat,aes(x=Var1, y=Var2, fill=value))+
geom_tile()
# Get lower triangle of the correlation matrix
get_lower_tri<-function(c){
c[upper.tri(c)] <- NA
return(c)
}
# Get upper triangle of the correlation matrix
get_upper_tri <- function(c){
c[lower.tri(c)]<- NA
return(c)
}
upper_tri <- get_upper_tri(c)
upper_tri
melted_cormat <- melt(upper_tri, na.rm = TRUE)
# Heatmap
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "#999999", high = "#CC79A7", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "#999999", high = "#CC79A7", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "#999999", high = "#CC79A7", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
colorblind_pal()
colorblind_pal(2)
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_colorblind(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
install.packages("viridis")
library(viridis)
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()+scale_fill_viridis()
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()+scale_fill_viridis()
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
, fill = value
, fill = value
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
scale_fill_viridis()+
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="magma")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="cividis")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="cividis")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggsave(file="test.svg", dpi= "print")
library("ggsci")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_aaas()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_material("brown")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggsave(file="test2.svg", dpi= "print")
load("C:/Users/ZahinAhmed/Desktop/CSE425_Benchmarking/Analysis/.RData")
library(data.table) #  transpose()
library(corrplot) #  correlation plot
library(gridExtra) #  multiplot
library(ggplot2)
library(readxl)
library(dplyr)
library(svglite)
library(ggplot2)
library(reshape2)
library(ggthemes)
library("ggsci")
library(viridis)
library(reshape2)
boxplot(C_red,Cpp_red,Java_red,JS_red,Python_red,R_red,
main = "Multiple boxplots for Readability comparision",
at = c(1,2,3,4,5,6),
names = c("C","C++","Java","Javascript","Python","R"),
las = 2,
col = c("red","orange","yellow","green","blue","purple"),
border = "brown",
horizontal = TRUE,
notch = FALSE
)
boxplot(my_data_readability)
data_long <- melt(my_data_readability)
head(data_long)
ggplot(data_long, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
coord_flip()
ggplot(data_long, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison")+
xlab("Languages")+
ylab("Score")
ggsave("Readability boxplot.tiff",device='tiff', dpi="300")
library(ggpubr)
library(data.table) #  transpose()
library(corrplot) #  correlation plot
library(gridExtra) #  multiplot
library(ggplot2)
library(readxl)
library(dplyr)
library(svglite)
library(ggplot2)
library(reshape2)
library(ggthemes)
library("ggsci")
library(viridis)
library(reshape2)
g1<-ggplot(data_long, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison")+
xlab("Languages")+
ylab("Score")
g2<- ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison (Non programmers)")+
xlab("Languages")+
ylab("Score")
g3<- ggplot(data3, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison (Experienced programmers)")+
xlab("Languages")+
ylab("Score")
ggarrange(g1, g2, g3+ rremove("x.text"),
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
ggsave("Readability boxplot_new.tiff",device='tiff', dpi="300")
ggsave("Readability boxplot_new.tiff",device='tiff', dpi=300)
setwd("C:/Users/ZahinAhmed/Desktop/CSE425_Benchmarking/Analysis")
ggsave("Readability boxplot_new.tiff",device='tiff', dpi=300)
ggsave("Readability boxplot_new.tiff",device='tiff', dpi="print")
ggsave("Readability boxplot_new.tiff",device='tiff')
ggarrange(g1, g2, g3,
labels = c("A", "B", "C"),
ncol = 1, nrow = 3)
g1grob <- ggplotGrob(g1)
g2grob <- ggplotGrob(g2)
g3grob <- ggplotGrob(g3)
grid.arrange(g1grob, g2grob, g3grob)
ggsave("Readability boxplot_new.tiff",device='tiff')
g3<- ggplot(data3, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1), aspect.ratio = 1)+
ggtitle("Multiple boxplots for Readability comparison (Experienced programmers)")+
xlab("Languages")+
ylab("Score")
g1grob <- ggplotGrob(g1)
g2grob <- ggplotGrob(g2)
g3grob <- ggplotGrob(g3)
grid.arrange(g1grob, g2grob, g3grob)
ggsave("Readability boxplot_new.tiff",device='tiff')
g1<-ggplot(data_long, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1), aspect.ratio = 1)+
ggtitle("Multiple boxplots for Readability comparison")+
xlab("Languages")+
ylab("Score")
g2<- ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1), aspect.ratio = 1)+
ggtitle("Multiple boxplots for Readability comparison (Non programmers)")+
xlab("Languages")+
ylab("Score")
g3<- ggplot(data3, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1), aspect.ratio = 1)+
ggtitle("Multiple boxplots for Readability comparison (Experienced programmers)")+
xlab("Languages")+
ylab("Score")
g1grob <- ggplotGrob(g1)
g2grob <- ggplotGrob(g2)
g3grob <- ggplotGrob(g3)
grid.arrange(g1grob, g2grob, g3grob)
ggsave("Readability boxplot_new.tiff",device='tiff')
g2<- ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(, aspect.ratio = 1)+
ggtitle("Multiple boxplots for Readability comparison (Non programmers)")+
xlab("Languages")+
ylab("Score")
g1grob <- ggplotGrob(g1)
g2grob <- ggplotGrob(g2)
grid.arrange(g1grob, g2grob, g3grob)
g1<-ggplot(data_long, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1), aspect.ratio = 1)+
ggtitle("Multiple boxplots for Readability comparison")+
xlab("Languages")+
ylab("Score")
g2<- ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1), aspect.ratio = 1)+
ggtitle("Multiple boxplots for Readability comparison (Non programmers)")+
xlab("Languages")+
ylab("Score")
g3<- ggplot(data3, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1), aspect.ratio = 1)+
ggtitle("Multiple boxplots for Readability comparison (Experienced programmers)")+
xlab("Languages")+
ylab("Score")
g1grob <- ggplotGrob(g1)
g2grob <- ggplotGrob(g2)
g3grob <- ggplotGrob(g3)
grid.arrange(g1grob, g2grob, g3grob)
ggsave("Readability boxplot_new.tiff",device='tiff')
grid.arrange(g1grob, g2grob, g3grob, nrow=3, nrow= 1)
grid.arrange(g1, g2, g3 + rremove("x.text"),
ncol = 2, nrow = 2)
grid.arrange(g1, g2, g3 + rremove("x.text"),
ncol = 1, nrow = 3)
ggsave("Readability boxplot_new.tiff",device='tiff', width = 60, height = 50)
ggsave("Readability boxplot_new.tiff",device='tiff' )
g1<-ggplot(data_long, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison")+
xlab("Languages")+
ylab("Score")
g2<- ggplot(data2, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison (Non programmers)")+
xlab("Languages")+
ylab("Score")
g3<- ggplot(data3, aes(x=variable, y=value, fill=variable)) +
geom_boxplot(alpha=0.3) +
theme(legend.position="none")+
theme_stata() + scale_fill_stata()+
coord_flip()+
theme(axis.text.y=element_text(angle=360, hjust=1))+
ggtitle("Multiple boxplots for Readability comparison (Experienced programmers)")+
xlab("Languages")+
ylab("Score")
grid.arrange(g1, g2, g3 + rremove("x.text"),
ncol = 1, nrow = 3)
