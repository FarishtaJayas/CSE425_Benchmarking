return(c)
}
upper_tri <- get_upper_tri(c)
upper_tri
melted_cormat <- melt(upper_tri, na.rm = TRUE)
# Heatmap
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "#999999", high = "#CC79A7", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()
library(ggthemes)
install.packages("ggthemes")
library(ggthemes)
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "#999999", high = "#CC79A7", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(low = "#999999", high = "#CC79A7", mid = "white",
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_colour_colorblind()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
colorblind_pal()
colorblind_pal(2)
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_colorblind(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation")+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
install.packages("viridis")
library(viridis)
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()+scale_fill_viridis()
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()+scale_fill_viridis()
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))+
coord_fixed()
midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
, fill = value
, fill = value
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
scale_fill_viridis()+
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="magma")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="cividis")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="plasma")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_viridis(option="cividis")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggsave(file="test.svg", dpi= "print")
library("ggsci")
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_aaas()+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggplot(data = melted_cormat, aes(Var2, Var1, fill = value))+
geom_tile(color = "white")+
scale_fill_gradient2(midpoint = 0, limit = c(-1,1), space = "Lab",
name="Pearson\nCorrelation") +scale_fill_material("brown")+
coord_fixed()+theme_minimal()+
theme(axis.text.x = element_text(angle = 45, vjust = 1,
size = 12, hjust = 1))
ggsave(file="test2.svg", dpi= "print")
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
setwd("C:/Users/ZahinAhmed/Desktop/CSE425_Benchmarking")
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
View(x)
res
bubblesort <- function(x){
n<-length(x)
for(i in 1:n){
for(j in 1:(n-i-1)){
if(x[j]>x[j+1]){
temp<-x[j]
x[j]<-x[j+1]
x[j+1]<-temp
}
}
}
return(x)
}
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
res<-bubblesort(x)
print("Sorted array is:")
res
res<-bubblesort(x)
x<-data.frame(x)
res<-bubblesort(x)
x<-(3,5,6,7,7)
x<-[3,5,6,7,7]
x<-c(3,5,6,7,7)
res<-bubblesort(x)
bubblesort <- function(x){
n<-length(x)
for(j in 1:(n-1)){
for(i in 1:(n-j)){
if(x[i]>x[i+1]){
temp<-x[i]
x[i]<-x[i+1]
x[i+1]<-temp
}
}
}
return(x)
}
res<-bubblesort(x)
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
res<-bubblesort(x)
res<-bubblesort(x)
x<-data.frame(x)
x<-data.frame(x)
res<-bubblesort(x)
x<-read.delim("numbers.txt", header = FALSE, sep = "\n", dec = ",")
View(x)
View(x)
res<-bubblesort(x)
x<-c(x)
res<-bubblesort(x)
x<-read.delim("numbers.txt", header = FALSE, sep = "\n", dec = ",")
length(x)
x<-read.delim("numbers.txt", header = FALSE, sep = "\n", dec = ",")
x<-data.frame(x)
length(x)
View(x)
View(x)
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
View(x)
length(x)
bubblesort <- function(x){
n<-nrow(x)
for(j in 1:(n-1)){
for(i in 1:(n-j)){
if(x[i]>x[i+1]){
temp<-x[i]
x[i]<-x[i+1]
x[i+1]<-temp
}
}
}
return(x)
}
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
res<-bubblesort(x)
nrow(x)
res<-bubblesort(x(1))
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
x<-data.frame(x)
res<-bubblesort(x)
x<-data.frame(x,stringsAsFactors = FALSE)
res<-bubblesort(x)
nrow(x)
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
x<-data.frame(x,stringsAsFactors = FALSE)
nrow(x)
View(x)
View(x)
bubblesort <- function(x){
n<-nrow(x)
for(j in 1:n){
for(i in 1:(n-j)){
if(x[i]>x[i+1]){
temp<-x[i]
x[i]<-x[i+1]
x[i+1]<-temp
}
}
}
return(x)
}
res<-bubblesort(x)
res<-bubblesort(x,)
bubblesort <- function(x,){
n<-nrow(x)
for(j in 1:n){
for(i in 1:(n-j)){
if(x[i]>x[i+1]){
temp<-x[i]
x[i]<-x[i+1]
x[i+1]<-temp
}
}
}
return(x)
}
bubblesort <- function(x[]){
n<-nrow(x)
for(j in 1:n){
for(i in 1:(n-j)){
if(x[i]>x[i+1]){
temp<-x[i]
x[i]<-x[i+1]
x[i+1]<-temp
}
}
}
return(x)
}
res<-bubblesort(x[1])
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
x<-as.vector(x)
nrow(x)
res<-bubblesort(x)
bubblesort <- function(x){
n<-length(x)
for(j in 1:){
for(i in 1:(n-j)){
if(x[i]>x[i+1]){
temp<-x[i]
x[i]<-x[i+1]
x[i+1]<-temp
}
}
}
return(x)
}
bubblesort <- function(x){
n<-length(x)
for(j in 1:){
for(i in 1:(n-j)){
if(x[i]>x[i+1]){
temp<-x[i]
x[i]<-x[i+1]
x[i+1]<-temp
}
}
}
return(x)
}
bubblesort <- function(x){
n<-length(x)
for(j in 1:n-1){
for(i in 1:(n-j)){
if(x[i]>x[i+1]){
temp<-x[i]
x[i]<-x[i+1]
x[i+1]<-temp
}
}
}
return(x)
}
(x)
View(x)
bubblesort <- function(x){
n<-length(x)
for(j in 1:n-1){
for(i in 1:(n-j)){
if(x[i]>x[i+1]){
temp<-x[i]
x[i]<-x[i+1]
x[i+1]<-temp
}
}
}
return(x)
}
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
x<-as.vector(x)
res<-bubblesort(x)
print("Sorted array is:")
res
bubblesort <- function(x){
n<-length(x)
for(j in 1:n-1){
for(i in 1:(n-j)){
if(x[i]>x[i+1]){
temp<-x[i]
x[i]<-x[i+1]
x[i+1]<-temp
}
}
}
return(x)
}
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
x<-as.vector(x)
res<-bubblesort(x)
print("Sorted array is:")
res
x<-as.vector(x)
x<-as.vector(as.numeric(x))
x<-as.numeric(x)
x<-read.delim("numbers.txt", sep = "\n")
", header = FALSE
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
x<-read.delim("numbers.txt", header = FALSE, sep = "\n")
scan(file = "numbers.txt", what = numeric(), sep = "\n")
res<-bubblesort(x)
y<-scan(file = "numbers.txt", what = numeric(), sep = "\n")
res<-bubblesort(y)
bubblesort <- function(x){
n = length(x)
v = x
for(j in 1:(n-1))
{
for(i in 1:(n-j))
{
if(v[i+1]<v[i])
{
t = v[i+1]
v[i+1] = v[i]
v[i] = t
}
}
}
x=v
}
res<-bubblesort(y)
bubblesort <- function(arr){
n = length(arr)
for(i in 1:n)
{
for(j in 1:(n-i-1))
{
if(arr[j]>arr[j])
{
t = arr[j+1]
arr[j+1] = arr[j]
arr[j] = t
}
}
}
}
res<-bubblesort(y)
bubblesort <- function(arr){
n = length(arr)
for(i in 1:n)
{
for(j in 1:(n-i-1))
{
if(arr[j]>arr[j+1])
{
t = arr[j+1]
arr[j+1] = arr[j]
arr[j] = t
}
}
}
}
res<-bubblesort(y)
bubblesort <- function(arr){
n = length(arr)
for(i in 1:n)
{
for(j in 0:(n-i-1))
{
if(arr[j]>arr[j+1])
{
t = arr[j+1]
arr[j+1] = arr[j]
arr[j] = t
}
}
}
}
res<-bubblesort(y)
res<-bubblesort(arr)
bubblesort <- function(arr){
n = length(arr)
for(i in 0:n)
{
for(j in 0:(n-i-1))
{
if(arr[j]>arr[j+1])
{
t = arr[j+1]
arr[j+1] = arr[j]
arr[j] = t
}
}
}
}
res<-bubblesort(y)
bubblesort <- function(x){
n = length(x)
v = x
for(j in 1:(n-1))
{
for(i in 1:(n-j))
{
if(v[i+1]<v[i])
{
t = v[i+1]
v[i+1] = v[i]
v[i] = t
}
}
}
print(v)
x = v
res<-bubblesort(y)
print("Sorted array is:")
res
